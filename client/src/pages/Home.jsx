import React, { useState, useEffect } from "react";

import { Card, FormField, Loader } from "../components";

const RenderCards = (props) => {
  if (props.data?.length > 0) {
    return props.data.map((post) => <Card key={post._id} {...post} />);
  }
  // return <Card />;
  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">
      {props.title}
    </h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);

  const [searchText, setSearchText] = useState("");

  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  const fetchPosts = async () => {
    try {
      setLoading(true);

      const response = await fetch("http://localhost:8888/api/v1/post", {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (response.ok) {
        const result = await response.json();

        setAllPosts(result.data.reverse()); // to fetch the newest post on the top
      }
    } catch (error) {
      alert(error);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);


  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);

    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter((item) => {
          item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase());
        });

        setSearchedResults(searchResult);
      }, 500)
    );
  };

  return (
    <section className="mx-auto max-w-7xl">
      <div>
        <h1 className="font-extrabold text-[32px] text-[#222328]">
          The Community Showcase
        </h1>
        <p className="mt-2 max-w-[500px] text-[#666e75] text-[16px]">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>

      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>
      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3 ">
                Showing results for
                <span className="text-[#222328]"> {searchText}</span>
              </h2>
            )}
            <div>
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No search results found!"
                />
              ) : (
                <RenderCards data={allPosts} title="No posts found!" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
